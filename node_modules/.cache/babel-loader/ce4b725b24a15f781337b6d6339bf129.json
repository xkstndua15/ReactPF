{"ast":null,"code":"import { takeLatest, all, put, fork, call } from 'redux-saga/effects';\nimport { fetchGallery, fetchMembers, fetchYoutube } from './api';\nimport * as types from './actionType';\nexport function* returnGallery(action) {\n  try {\n    const response = yield call(fetchGallery, action.Opt);\n    yield put({\n      type: types.GALLERY.success,\n      payload: response.data.photos.photo\n    });\n  } catch (err) {\n    yield put({\n      type: types.GALLERY.err,\n      payload: err\n    });\n  }\n}\nexport function* callGallery() {\n  yield takeLatest(types.GALLERY.start, returnGallery);\n} //youtube saga설정\n\nexport function* returnYoutube(action) {\n  try {\n    const response = yield call(fetchYoutube, action.Opt);\n    yield put({\n      type: types.YOUTUBE.success,\n      payload: response.data.items\n    });\n  } catch (err) {\n    yield put({\n      type: types.YOUTUBE.err,\n      payload: err\n    });\n  }\n}\nexport function* callYoutube() {\n  yield takeLatest(types.YOUTUBE.start, returnYoutube);\n} //members saga설정\n\nexport function* returnMembers() {\n  try {\n    const response = yield call(fetchMembers);\n    yield put({\n      type: types.MEMBERS.success,\n      payload: response.data.members\n    });\n  } catch (err) {\n    yield put({\n      type: types.MEMBERS.err,\n      payload: err\n    });\n  }\n}\nexport function* callMembers() {\n  yield takeLatest(types.MEMBERS.start, returnMembers);\n} //reducer에 적용될 rootSaga생성함수\n\nexport default function* rootSaga() {\n  yield all([fork(callGallery), fork(callMembers), fork(callYoutube)]);\n}","map":{"version":3,"names":["takeLatest","all","put","fork","call","fetchGallery","fetchMembers","fetchYoutube","types","returnGallery","action","response","Opt","type","GALLERY","success","payload","data","photos","photo","err","callGallery","start","returnYoutube","YOUTUBE","items","callYoutube","returnMembers","MEMBERS","members","callMembers","rootSaga"],"sources":["E:/react/react_pf/src/redux/saga.js"],"sourcesContent":["import { takeLatest, all, put, fork, call } from 'redux-saga/effects';\r\nimport { fetchGallery, fetchMembers, fetchYoutube } from './api';\r\nimport * as types from './actionType';\r\n\r\nexport function* returnGallery(action) {\r\n\ttry {\r\n\t\tconst response = yield call(fetchGallery, action.Opt);\r\n\t\tyield put({\r\n\t\t\ttype: types.GALLERY.success,\r\n\t\t\tpayload: response.data.photos.photo,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({ type: types.GALLERY.err, payload: err });\r\n\t}\r\n}\r\nexport function* callGallery() {\r\n\tyield takeLatest(types.GALLERY.start, returnGallery);\r\n}\r\n\r\n//youtube saga설정\r\nexport function* returnYoutube(action) {\r\n\ttry {\r\n\t\tconst response = yield call(fetchYoutube, action.Opt);\r\n\t\tyield put({ type: types.YOUTUBE.success, payload: response.data.items });\r\n\t} catch (err) {\r\n\t\tyield put({ type: types.YOUTUBE.err, payload: err });\r\n\t}\r\n}\r\nexport function* callYoutube() {\r\n\tyield takeLatest(types.YOUTUBE.start, returnYoutube);\r\n}\r\n\r\n//members saga설정\r\nexport function* returnMembers() {\r\n\ttry {\r\n\t\tconst response = yield call(fetchMembers);\r\n\t\tyield put({ type: types.MEMBERS.success, payload: response.data.members });\r\n\t} catch (err) {\r\n\t\tyield put({ type: types.MEMBERS.err, payload: err });\r\n\t}\r\n}\r\nexport function* callMembers() {\r\n\tyield takeLatest(types.MEMBERS.start, returnMembers);\r\n}\r\n\r\n//reducer에 적용될 rootSaga생성함수\r\nexport default function* rootSaga() {\r\n\tyield all([fork(callGallery), fork(callMembers), fork(callYoutube)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,QAAyD,OAAzD;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AAEA,OAAO,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;EACtC,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACC,YAAD,EAAeK,MAAM,CAACE,GAAtB,CAA3B;IACA,MAAMV,GAAG,CAAC;MACTW,IAAI,EAAEL,KAAK,CAACM,OAAN,CAAcC,OADX;MAETC,OAAO,EAAEL,QAAQ,CAACM,IAAT,CAAcC,MAAd,CAAqBC;IAFrB,CAAD,CAAT;EAIA,CAND,CAME,OAAOC,GAAP,EAAY;IACb,MAAMlB,GAAG,CAAC;MAAEW,IAAI,EAAEL,KAAK,CAACM,OAAN,CAAcM,GAAtB;MAA2BJ,OAAO,EAAEI;IAApC,CAAD,CAAT;EACA;AACD;AACD,OAAO,UAAUC,WAAV,GAAwB;EAC9B,MAAMrB,UAAU,CAACQ,KAAK,CAACM,OAAN,CAAcQ,KAAf,EAAsBb,aAAtB,CAAhB;AACA,C,CAED;;AACA,OAAO,UAAUc,aAAV,CAAwBb,MAAxB,EAAgC;EACtC,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,YAAD,EAAeG,MAAM,CAACE,GAAtB,CAA3B;IACA,MAAMV,GAAG,CAAC;MAAEW,IAAI,EAAEL,KAAK,CAACgB,OAAN,CAAcT,OAAtB;MAA+BC,OAAO,EAAEL,QAAQ,CAACM,IAAT,CAAcQ;IAAtD,CAAD,CAAT;EACA,CAHD,CAGE,OAAOL,GAAP,EAAY;IACb,MAAMlB,GAAG,CAAC;MAAEW,IAAI,EAAEL,KAAK,CAACgB,OAAN,CAAcJ,GAAtB;MAA2BJ,OAAO,EAAEI;IAApC,CAAD,CAAT;EACA;AACD;AACD,OAAO,UAAUM,WAAV,GAAwB;EAC9B,MAAM1B,UAAU,CAACQ,KAAK,CAACgB,OAAN,CAAcF,KAAf,EAAsBC,aAAtB,CAAhB;AACA,C,CAED;;AACA,OAAO,UAAUI,aAAV,GAA0B;EAChC,IAAI;IACH,MAAMhB,QAAQ,GAAG,MAAMP,IAAI,CAACE,YAAD,CAA3B;IACA,MAAMJ,GAAG,CAAC;MAAEW,IAAI,EAAEL,KAAK,CAACoB,OAAN,CAAcb,OAAtB;MAA+BC,OAAO,EAAEL,QAAQ,CAACM,IAAT,CAAcY;IAAtD,CAAD,CAAT;EACA,CAHD,CAGE,OAAOT,GAAP,EAAY;IACb,MAAMlB,GAAG,CAAC;MAAEW,IAAI,EAAEL,KAAK,CAACoB,OAAN,CAAcR,GAAtB;MAA2BJ,OAAO,EAAEI;IAApC,CAAD,CAAT;EACA;AACD;AACD,OAAO,UAAUU,WAAV,GAAwB;EAC9B,MAAM9B,UAAU,CAACQ,KAAK,CAACoB,OAAN,CAAcN,KAAf,EAAsBK,aAAtB,CAAhB;AACA,C,CAED;;AACA,eAAe,UAAUI,QAAV,GAAqB;EACnC,MAAM9B,GAAG,CAAC,CAACE,IAAI,CAACkB,WAAD,CAAL,EAAoBlB,IAAI,CAAC2B,WAAD,CAAxB,EAAuC3B,IAAI,CAACuB,WAAD,CAA3C,CAAD,CAAT;AACA"},"metadata":{},"sourceType":"module"}